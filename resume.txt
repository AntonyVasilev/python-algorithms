Задание:
Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков.
Проанализировать результат и определить программы с наиболее эффективным использованием памяти.
Примечание: По аналогии с эмпирической оценкой алгоритмов идеальным решением будет:
a. выбрать хорошую задачу, которую имеет смысл оценивать по памяти;
b. написать 3 варианта кода (один у вас уже есть);
проанализировать 3 варианта и выбрать оптимальный;
c. результаты анализа (количество занятой памяти в вашей среде разработки) вставить в виде комментариев в файл с кодом.
Не забудьте указать версию и разрядность вашей ОС и интерпретатора Python;
d. написать общий вывод: какой из трёх вариантов лучше и почему.

Сравнение версий программы:
1. Первый вариант производит расчет суммы и произведения двух шестнадцатеричных чисел, используя написанные мной функции.
2. Второй и третий варианты вначале переводят шестнадцатеричные числа в десятичную систему счисления.
Затем производят сложение/умножение и переводят получившийся результат обратно в шестнадцатеричную систему счисления.
Различие в вариантах в точ, что во втором варианте перевод из одной системы счисления в другую производится с помощью функций,
написанных мной, а в третьем использованы встроенные в Python функции int и hex.


Примечание:
За основу функции для вывода в терминал данных о размерах занятой памяти использовал функцию, показанную на видеоуроке.
Немного доработал ее, чтобы получить возможность подсчитать общий размер занятой памяти.

Вывод:
По данным подсчета видно, что третий вариант программы занимает в 10 раз меньше памяти.
Поэтому могу сделать вывод что он является наилучшим из 3-х вариантов.